apply plugin: 'com.android.application'

apply plugin: 'com.google.protobuf'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
// Annotation processor for dependency injection
// apply plugin: 'kotlin-kapt'

buildscript {
  ext.kotlin_version = '1.2.61'

  repositories {
    mavenCentral()
    mavenLocal()
  }
  dependencies {
    classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.5'
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}

repositories {
  maven { url "https://jitpack.io" }
  mavenCentral()
  mavenLocal()
  google()
}

android {
  compileSdkVersion 26
  defaultConfig {
    applicationId "azul.paleblue.foundation.azul"
    minSdkVersion 16
    targetSdkVersion 16
    versionCode 1
    versionName "1.0"
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }
  buildTypes {
    debug {
      buildConfigField 'String', 'API_HOST', '"${getIp()}"'
      buildConfigField 'int', 'API_PORT', '8080'
    }
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      buildConfigField 'String', 'API_HOST', '"azul.paleblue.foundation"'
      buildConfigField 'int', 'API_PORT', '8080'
    }
  }
}

protobuf {
  protoc { artifact = 'com.google.protobuf:protoc:3.5.1-1' }
  plugins {
    javalite { artifact = "com.google.protobuf:protoc-gen-javalite:3.0.0" }
    grpc {
      artifact = 'io.grpc:protoc-gen-grpc-java:1.14.0' // CURRENT_GRPC_VERSION
    }
  }
  generateProtoTasks {
    all().each { task ->
      task.plugins {
        javalite {}
        grpc { // Options added to --grpc_out
          option 'lite'
        }
      }
    }
  }
}

def getIp() {
  InetAddress result = null;
  Enumeration<NetworkInterface> interfaces = NetworkInterface.getNetworkInterfaces();
  while (interfaces.hasMoreElements()) {
    Enumeration<InetAddress> addresses = interfaces.nextElement().getInetAddresses();
    while (addresses.hasMoreElements()) {
      InetAddress address = addresses.nextElement();
      if (!address.isLoopbackAddress()) {
        if (address.isSiteLocalAddress()) {
          return address.getHostAddress();
        } else if (result == null) {
          result = address;
        }
      }
    }
  }
  return (result != null ? result : InetAddress.getLocalHost()).getHostAddress();
}

dependencies {
  def anko_version = "0.10.5"
  def lifecycle_version = "1.1.1"
  def daggerVersion = "2.11"

  // Anko Layouts
  implementation "org.jetbrains.anko:anko-sdk15:$anko_version"
  // sdk15, sdk19, sdk21, sdk23 are also available
  implementation "org.jetbrains.anko:anko-appcompat-v7:$anko_version"
  // Anko Commons
  implementation "org.jetbrains.anko:anko-commons:$anko_version"

  // Coroutine listeners for Anko Layouts
  implementation "org.jetbrains.anko:anko-sdk15-coroutines:$anko_version"
  implementation "org.jetbrains.anko:anko-appcompat-v7-coroutines:$anko_version"
  implementation "org.jetbrains.anko:anko-coroutines:$anko_version"

  // Push
  implementation 'com.google.firebase:firebase-messaging:17.3.0'

  // gRPC-java
  // You need to build grpc-java to obtain these libraries below.
  implementation 'io.grpc:grpc-okhttp:1.14.0' // CURRENT_GRPC_VERSION
  implementation 'io.grpc:grpc-protobuf-lite:1.14.0' // CURRENT_GRPC_VERSION
  implementation 'io.grpc:grpc-stub:1.14.0' // CURRENT_GRPC_VERSION
  implementation 'javax.annotation:javax.annotation-api:1.2'
  
  // Bitcoin 
  implementation 'com.github.SandroMachado:BitcoinPaymentURI:1.0.3'

  // Barcode
  implementation 'com.google.zxing:core:3.2.1'
  implementation 'me.dm7.barcodescanner:zxing:1.9.8'

  // Dependency Injection
  //implementation "com.google.dagger:dagger:$daggerVersion"
  //implementation "com.google.dagger:dagger-android:$daggerVersion"
  //kapt "com.google.dagger:dagger-compiler:$daggerVersion"
  //kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
  //compileOnly 'javax.annotation:jsr250-api:1.0'
  //compile "com.google.dagger:dagger-android-support:$daggerVersion"

  // ViewModel and LiveData
  implementation "android.arch.lifecycle:extensions:$lifecycle_version"

  // Location
  implementation "com.google.android.gms:play-services-location:15.0.1"

    // Core
  implementation fileTree(dir: 'libs', include: ['*.jar'])
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
  implementation 'com.android.support.constraint:constraint-layout:1.1.3'
  testImplementation 'junit:junit:4.12'
  androidTestImplementation 'com.android.support.test:runner:1.0.2'
  androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

